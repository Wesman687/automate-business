# Email Logging Configuration
# Add this to your logging_config.yaml file

version: 1
disable_existing_loggers: false

formatters:
  default:
    format: '%(asctime)s | %(levelname)s | %(name)s | %(message)s'
  email:
    format: '%(asctime)s | EMAIL | %(levelname)s | %(message)s'

handlers:
  console:
    class: logging.StreamHandler
    level: INFO
    formatter: default
    stream: ext://sys.stdout

  file:
    class: logging.handlers.RotatingFileHandler
    level: INFO
    formatter: default
    filename: logs/app.log
    maxBytes: 10485760  # 10MB
    backupCount: 5

  email_file:
    class: logging.handlers.RotatingFileHandler
    level: INFO
    formatter: email
    filename: logs/email.log
    maxBytes: 10485760  # 10MB
    backupCount: 10

  # Example: Send critical email events to a webhook or external service
  # email_webhook:
  #   class: logging.handlers.HTTPHandler
  #   level: ERROR
  #   host: your-webhook-endpoint.com
  #   url: /email-alerts
  #   method: POST

loggers:
  # Root logger
  '':
    level: INFO
    handlers: [console, file]
    propagate: false

  # Dedicated email logger
  email:
    level: INFO
    handlers: [console, email_file]  # Add email_webhook for critical alerts
    propagate: false

  # Other service loggers
  api.admin:
    level: INFO
    handlers: [console, file]
    propagate: false

  api.auth:
    level: INFO
    handlers: [console, file]
    propagate: false

  services.email_service:
    level: INFO
    handlers: [console, file]
    propagate: false

  services.email_reader_service:
    level: INFO
    handlers: [console, file]
    propagate: false
